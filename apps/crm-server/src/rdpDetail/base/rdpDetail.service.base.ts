/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RdpDetail as PrismaRdpDetail,
  Client as PrismaClient,
} from "@prisma/client";

export class RdpDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RdpDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.rdpDetail.count(args);
  }

  async rdpDetails<T extends Prisma.RdpDetailFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RdpDetailFindManyArgs>
  ): Promise<PrismaRdpDetail[]> {
    return this.prisma.rdpDetail.findMany<Prisma.RdpDetailFindManyArgs>(args);
  }
  async rdpDetail<T extends Prisma.RdpDetailFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RdpDetailFindUniqueArgs>
  ): Promise<PrismaRdpDetail | null> {
    return this.prisma.rdpDetail.findUnique(args);
  }
  async createRdpDetail<T extends Prisma.RdpDetailCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RdpDetailCreateArgs>
  ): Promise<PrismaRdpDetail> {
    return this.prisma.rdpDetail.create<T>(args);
  }
  async updateRdpDetail<T extends Prisma.RdpDetailUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RdpDetailUpdateArgs>
  ): Promise<PrismaRdpDetail> {
    return this.prisma.rdpDetail.update<T>(args);
  }
  async deleteRdpDetail<T extends Prisma.RdpDetailDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RdpDetailDeleteArgs>
  ): Promise<PrismaRdpDetail> {
    return this.prisma.rdpDetail.delete(args);
  }

  async getClient(parentId: string): Promise<PrismaClient | null> {
    return this.prisma.rdpDetail
      .findUnique({
        where: { id: parentId },
      })
      .client();
  }
}
